{
  "address": "0x53990477A26d0eE5F054302bD2a422d02D764cf5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiptToken",
          "type": "address"
        }
      ],
      "name": "addAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x929f130addba39050f3d0fe5e3fee30ca8b31aa811d8173c38850537f4380f92",
  "receipt": {
    "to": null,
    "from": "0xCD943EE26221AC3e6e7f3e38598F2b08BAEA87DD",
    "contractAddress": "0x53990477A26d0eE5F054302bD2a422d02D764cf5",
    "transactionIndex": 4,
    "gasUsed": "695263",
    "logsBloom": "0x
    "blockHash": "0xb7ecc614be487389bf44234e8acc0bda5530317d3028ba61a1b19a9675046c7a",
    "transactionHash": "0x929f130addba39050f3d0fe5e3fee30ca8b31aa811d8173c38850537f4380f92",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 11044776,
        "transactionHash": "0x929f130addba39050f3d0fe5e3fee30ca8b31aa811d8173c38850537f4380f92",
        "address": "0x53990477A26d0eE5F054302bD2a422d02D764cf5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cd943ee26221ac3e6e7f3e38598f2b08baea87dd"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0xb7ecc614be487389bf44234e8acc0bda5530317d3028ba61a1b19a9675046c7a"
      }
    ],
    "blockNumber": 11044776,
    "cumulativeGasUsed": "1692267",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "363879559355511f2c2861c9db5add6b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiptToken\",\"type\":\"address\"}],\"name\":\"addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMMs/MoolaWrapper.sol\":\"MoolaWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/AMMs/IWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: ISC\\n\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IWrapper {\\n  // function getQuotes(address tokenIn, uint256 amountIn)\\n  //   external\\n  //   view\\n  //   returns (uint256[] memory expectedOut, address[] memory tokensOut);\\n\\n  function getQuote(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn\\n  ) external view returns (uint256);\\n\\n  function swap(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 minAmountOut\\n  ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xe28ad8a2e64da6b69dd248a3eeff8544af45bf910ad0d3d0a1e53318a9389e17\",\"license\":\"ISC\"},\"contracts/AMMs/MoolaWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: ISC\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IWrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ILendingPool {\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external;\\n}\\n\\ncontract MoolaWrapper is IWrapper, Ownable {\\n  ILendingPool lendingPool =\\n    ILendingPool(0x970b12522CA9b4054807a2c5B736149a5BE6f670);\\n  mapping(address => address) pairs; // underlying  => receiptToken\\n\\n  function addAsset(address underlying, address receiptToken)\\n    external\\n    onlyOwner\\n  {\\n    require(pairs[underlying] == address(0), \\\"Asset pair already listed\\\");\\n    pairs[underlying] = receiptToken;\\n  }\\n\\n  function _underlying(address tokenIn, address tokenOut)\\n    internal\\n    view\\n    returns (\\n      address underlying,\\n      address receipt,\\n      bool isDeposit\\n    )\\n  {\\n    underlying = tokenIn;\\n    receipt = tokenOut;\\n    isDeposit = true;\\n    if (pairs[tokenOut] == tokenIn) {\\n      underlying = tokenOut;\\n      receipt = tokenIn;\\n      isDeposit = false;\\n    }\\n  }\\n\\n  function getQuote(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn\\n  ) external view override returns (uint256) {\\n    if (pairs[tokenIn] == tokenOut || pairs[tokenOut] == tokenIn) {\\n      return amountIn; // The asset pair exists, so in one atomic action can be swapped 1:1\\n    }\\n    return 0;\\n  }\\n\\n  function swap(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 minAmountOut\\n  ) external override returns (uint256) {\\n    (address underlying, address receipt, bool isDeposit) = _underlying(\\n      tokenIn,\\n      tokenOut\\n    );\\n    require(pairs[underlying] == receipt, \\\"Pair does not exist\\\");\\n\\n    IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn);\\n    require(\\n      IERC20(tokenIn).approve(address(lendingPool), amountIn),\\n      \\\"Approval failed\\\"\\n    );\\n    uint256 balanceBefore = IERC20(tokenOut).balanceOf(address(this));\\n\\n    if (isDeposit) {\\n      lendingPool.deposit(tokenIn, amountIn, address(this), 0);\\n    }\\n    uint256 actualAmountOut = IERC20(tokenOut).balanceOf(address(this)) -\\n      balanceBefore;\\n\\n    IERC20(tokenOut).transfer(msg.sender, actualAmountOut);\\n    return actualAmountOut;\\n  }\\n}\\n\",\"keccak256\":\"0x11bb70849c2ac6210edc1b3ac4e204365bd4346c8c84ee8aede8660011cd58c5\",\"license\":\"ISC\"}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160a01b03191673970b12522ca9b4054807a2c5b736149a5be6f67017905534801561003657600080fd5b5061004761004261004c565b610050565b6100a0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610adf806100af6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063da48999711610050578063da489997146100bf578063f2fde38b146100d2578063fe029156146100e557610072565b8063715018a6146100775780638da5cb5b14610081578063c515ee231461009f575b600080fd5b61007f6100f8565b005b61008961014c565b60405161009691906108af565b60405180910390f35b6100b26100ad3660046107fb565b61015b565b6040516100969190610a64565b61007f6100cd3660046107c9565b6101bb565b61007f6100e03660046107af565b610278565b6100b26100f3366004610836565b6102e9565b6101006106ea565b6001600160a01b031661011161014c565b6001600160a01b0316146101405760405162461bcd60e51b815260040161013790610a2f565b60405180910390fd5b61014a60006106ee565b565b6000546001600160a01b031690565b6001600160a01b038381166000908152600260205260408120549091848116911614806101a457506001600160a01b038381166000908152600260205260409020548116908516145b156101b05750806101b4565b5060005b9392505050565b6101c36106ea565b6001600160a01b03166101d461014c565b6001600160a01b0316146101fa5760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0382811660009081526002602052604090205416156102325760405162461bcd60e51b8152600401610137906109c1565b6001600160a01b03918216600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6102806106ea565b6001600160a01b031661029161014c565b6001600160a01b0316146102b75760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0381166102dd5760405162461bcd60e51b815260040161013790610964565b6102e6816106ee565b50565b6000806000806102f98888610756565b6001600160a01b03838116600090815260026020526040902054939650919450925083811691161461033d5760405162461bcd60e51b81526004016101379061092d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038916906323b872dd9061038690339030908b906004016108c3565b602060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610877565b506001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038a81169263095ea7b39261042692909116908a906004016108e7565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610877565b6104945760405162461bcd60e51b8152600401610137906109f8565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038916906370a08231906104dc9030906004016108af565b60206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190610897565b905081156105b7576001546040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e8eda9df90610584908c908b903090600090600401610900565b600060405180830381600087803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b505050505b600081896001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105e691906108af565b60206040518083038186803b1580156105fe57600080fd5b505afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610897565b6106409190610a6d565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038a169063a9059cbb9061068a90339085906004016108e7565b602060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610877565b509998505050505050505050565b3390565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03818116600090815260026020526040902054839183916001918481169116141561078c575082915083905060005b9250925092565b80356001600160a01b03811681146107aa57600080fd5b919050565b6000602082840312156107c0578081fd5b6101b482610793565b600080604083850312156107db578081fd5b6107e483610793565b91506107f260208401610793565b90509250929050565b60008060006060848603121561080f578081fd5b61081884610793565b925061082660208501610793565b9150604084013590509250925092565b6000806000806080858703121561084b578081fd5b61085485610793565b935061086260208601610793565b93969395505050506040820135916060013590565b600060208284031215610888578081fd5b815180151581146101b4578182fd5b6000602082840312156108a8578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b60208082526013908201527f5061697220646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4173736574207061697220616c7265616479206c697374656400000000000000604082015260600190565b6020808252600f908201527f417070726f76616c206661696c65640000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b600082821015610aa4577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50039056fea2646970667358221220af7dea1f9f61e37c3b8070da420cf8f88f396f46a7bd625fefd527f6ebf43f3764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063da48999711610050578063da489997146100bf578063f2fde38b146100d2578063fe029156146100e557610072565b8063715018a6146100775780638da5cb5b14610081578063c515ee231461009f575b600080fd5b61007f6100f8565b005b61008961014c565b60405161009691906108af565b60405180910390f35b6100b26100ad3660046107fb565b61015b565b6040516100969190610a64565b61007f6100cd3660046107c9565b6101bb565b61007f6100e03660046107af565b610278565b6100b26100f3366004610836565b6102e9565b6101006106ea565b6001600160a01b031661011161014c565b6001600160a01b0316146101405760405162461bcd60e51b815260040161013790610a2f565b60405180910390fd5b61014a60006106ee565b565b6000546001600160a01b031690565b6001600160a01b038381166000908152600260205260408120549091848116911614806101a457506001600160a01b038381166000908152600260205260409020548116908516145b156101b05750806101b4565b5060005b9392505050565b6101c36106ea565b6001600160a01b03166101d461014c565b6001600160a01b0316146101fa5760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0382811660009081526002602052604090205416156102325760405162461bcd60e51b8152600401610137906109c1565b6001600160a01b03918216600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6102806106ea565b6001600160a01b031661029161014c565b6001600160a01b0316146102b75760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0381166102dd5760405162461bcd60e51b815260040161013790610964565b6102e6816106ee565b50565b6000806000806102f98888610756565b6001600160a01b03838116600090815260026020526040902054939650919450925083811691161461033d5760405162461bcd60e51b81526004016101379061092d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038916906323b872dd9061038690339030908b906004016108c3565b602060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610877565b506001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038a81169263095ea7b39261042692909116908a906004016108e7565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610877565b6104945760405162461bcd60e51b8152600401610137906109f8565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038916906370a08231906104dc9030906004016108af565b60206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190610897565b905081156105b7576001546040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e8eda9df90610584908c908b903090600090600401610900565b600060405180830381600087803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b505050505b600081896001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105e691906108af565b60206040518083038186803b1580156105fe57600080fd5b505afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610897565b6106409190610a6d565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038a169063a9059cbb9061068a90339085906004016108e7565b602060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610877565b509998505050505050505050565b3390565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03818116600090815260026020526040902054839183916001918481169116141561078c575082915083905060005b9250925092565b80356001600160a01b03811681146107aa57600080fd5b919050565b6000602082840312156107c0578081fd5b6101b482610793565b600080604083850312156107db578081fd5b6107e483610793565b91506107f260208401610793565b90509250929050565b60008060006060848603121561080f578081fd5b61081884610793565b925061082660208501610793565b9150604084013590509250925092565b6000806000806080858703121561084b578081fd5b61085485610793565b935061086260208601610793565b93969395505050506040820135916060013590565b600060208284031215610888578081fd5b815180151581146101b4578182fd5b6000602082840312156108a8578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b60208082526013908201527f5061697220646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4173736574207061697220616c7265616479206c697374656400000000000000604082015260600190565b6020808252600f908201527f417070726f76616c206661696c65640000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b600082821015610aa4577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50039056fea2646970667358221220af7dea1f9f61e37c3b8070da420cf8f88f396f46a7bd625fefd527f6ebf43f3764736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/AMMs/MoolaWrapper.sol:MoolaWrapper",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1815,
        "contract": "contracts/AMMs/MoolaWrapper.sol:MoolaWrapper",
        "label": "lendingPool",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ILendingPool)1805"
      },
      {
        "astId": 1819,
        "contract": "contracts/AMMs/MoolaWrapper.sol:MoolaWrapper",
        "label": "pairs",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(ILendingPool)1805": {
        "encoding": "inplace",
        "label": "contract ILendingPool",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}